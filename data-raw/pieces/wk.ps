%!PS-Adobe-3.0
%%Creator: cairo 1.16.0 (https://cairographics.org)
%%CreationDate: Thu Dec 03 14:58:54 2020
%%Pages: 1
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%DocumentMedia: 9x9mm 26 26 0 () ()
%%BoundingBox: 0 0 27 27
%%EndComments
%%BeginProlog
/languagelevel where
{ pop languagelevel } { 1 } ifelse
2 lt { /Helvetica findfont 12 scalefont setfont 50 500 moveto
  (This print job requires a PostScript Language Level 2 printer.) show
  showpage quit } if
/q { gsave } bind def
/Q { grestore } bind def
/cm { 6 array astore concat } bind def
/w { setlinewidth } bind def
/J { setlinecap } bind def
/j { setlinejoin } bind def
/M { setmiterlimit } bind def
/d { setdash } bind def
/m { moveto } bind def
/l { lineto } bind def
/c { curveto } bind def
/h { closepath } bind def
/re { exch dup neg 3 1 roll 5 3 roll moveto 0 rlineto
      0 exch rlineto 0 rlineto closepath } bind def
/S { stroke } bind def
/f { fill } bind def
/f* { eofill } bind def
/n { newpath } bind def
/W { clip } bind def
/W* { eoclip } bind def
/BT { } bind def
/ET { } bind def
/BDC { mark 3 1 roll /BDC pdfmark } bind def
/EMC { mark /EMC pdfmark } bind def
/cairo_store_point { /cairo_point_y exch def /cairo_point_x exch def } def
/Tj { show currentpoint cairo_store_point } bind def
/TJ {
  {
    dup
    type /stringtype eq
    { show } { -0.001 mul 0 cairo_font_matrix dtransform rmoveto } ifelse
  } forall
  currentpoint cairo_store_point
} bind def
/cairo_selectfont { cairo_font_matrix aload pop pop pop 0 0 6 array astore
    cairo_font exch selectfont cairo_point_x cairo_point_y moveto } bind def
/Tf { pop /cairo_font exch def /cairo_font_matrix where
      { pop cairo_selectfont } if } bind def
/Td { matrix translate cairo_font_matrix matrix concatmatrix dup
      /cairo_font_matrix exch def dup 4 get exch 5 get cairo_store_point
      /cairo_font where { pop cairo_selectfont } if } bind def
/Tm { 2 copy 8 2 roll 6 array astore /cairo_font_matrix exch def
      cairo_store_point /cairo_font where { pop cairo_selectfont } if } bind def
/g { setgray } bind def
/rg { setrgbcolor } bind def
/d1 { setcachedevice } bind def
/cairo_data_source {
  CairoDataIndex CairoData length lt
    { CairoData CairoDataIndex get /CairoDataIndex CairoDataIndex 1 add def }
    { () } ifelse
} def
/cairo_flush_ascii85_file { cairo_ascii85_file status { cairo_ascii85_file flushfile } if } def
/cairo_image { image cairo_flush_ascii85_file } def
/cairo_imagemask { imagemask cairo_flush_ascii85_file } def
/cairo_set_page_size {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
%%PageMedia: 9x9mm
%%PageBoundingBox: 0 0 27 27
27 27 cairo_set_page_size
%%EndPageSetup
q 0 0 27 27 rectclip
1 0 0 -1 0 27 cm q
0 g
13.063 0 m 12.754 0 12.5 0.25 12.5 0.563 c 12.5 4.785 l 12.5 5.098 12.754
 5.348 13.063 5.348 c 13.375 5.348 13.625 5.098 13.625 4.785 c 13.625 0.563
 l 13.625 0.25 13.375 0 13.063 0 c h
13.063 0 m f
11.188 1.5 m 10.879 1.5 10.625 1.75 10.625 2.063 c 10.625 2.375 10.879 
2.625 11.188 2.625 c 14.938 2.625 l 15.25 2.625 15.5 2.375 15.5 2.063 c 
15.5 1.75 15.25 1.5 14.938 1.5 c h
11.188 1.5 m f
1 g
13.063 14.813 m 13.063 14.813 16.438 9.188 15.313 6.938 c 15.313 6.938 
14.563 5.063 13.063 5.063 c 11.563 5.063 10.813 6.938 10.813 6.938 c 9.688
 9.188 13.063 14.813 13.063 14.813 c f
0 g
13.063 4.5 m 12.078 4.5 11.367 5.109 10.938 5.648 c 10.516 6.176 10.32 
6.672 10.309 6.699 c 9.941 7.441 9.969 8.32 10.137 9.223 c 10.309 10.125
 10.637 11.07 11 11.934 c 11.719 13.668 12.582 15.102 12.582 15.102 c 13.063
 14.813 l 13.547 15.102 l 13.547 15.102 14.406 13.668 15.129 11.934 c 15.492
 11.07 15.82 10.125 15.988 9.223 c 16.156 8.32 16.188 7.441 15.82 6.699 
c 15.809 6.672 15.609 6.176 15.191 5.648 c 14.758 5.109 14.047 4.5 13.063
 4.5 c h
13.063 5.625 m 13.578 5.625 13.992 5.953 14.313 6.352 c 14.629 6.75 14.789
 7.148 14.789 7.148 c 14.813 7.188 l 15 7.566 15.031 8.23 14.883 9.012 c
 14.738 9.797 14.434 10.68 14.094 11.5 c 13.625 12.621 13.355 13.035 13.063
 13.559 c 12.773 13.035 12.5 12.621 12.035 11.5 c 11.695 10.68 11.391 9.797
 11.242 9.012 c 11.098 8.23 11.129 7.566 11.316 7.188 c 11.328 7.168 l 11.336
 7.148 l 11.336 7.148 11.496 6.75 11.816 6.352 c 12.133 5.953 12.547 5.625
 13.063 5.625 c h
13.063 5.625 m f
1 g
4.813 23.813 m 8.938 26.438 16.438 26.438 20.563 23.813 c 20.563 18.563
 l 20.563 18.563 27.313 15.188 25.063 10.688 c 22.063 5.813 14.938 8.063
 13.063 13.688 c 13.063 16.313 l 13.063 13.688 l 10.438 8.063 3.313 5.813
 1.063 10.688 c -1.188 15.188 4.813 18.188 4.813 18.188 c h
4.813 23.813 m f
0 g
5.148 7.449 m 4.516 7.457 3.898 7.563 3.32 7.781 c 2.164 8.219 1.176 9.113
 0.559 10.441 c -0.055 11.676 -0.121 12.871 0.156 13.902 c 0.434 14.938 
1.031 15.805 1.684 16.508 c 2.773 17.68 3.863 18.297 4.25 18.504 c 4.25 
23.813 l 4.25 24.004 4.352 24.184 4.512 24.285 c 6.703 25.684 9.699 26.344
 12.688 26.344 c 15.68 26.344 18.672 25.684 20.867 24.285 c 21.027 24.184
 21.125 24.004 21.125 23.813 c 21.125 18.883 l 21.527 18.672 22.789 17.98
 24.055 16.711 c 24.801 15.969 25.488 15.063 25.844 13.992 c 26.199 12.926
 26.191 11.688 25.566 10.434 c 25.559 10.422 25.551 10.406 25.543 10.395
 c 23.918 7.754 21.074 7 18.492 7.707 c 16.223 8.332 14.164 10.074 13.008
 12.512 c 11.559 10.074 9.352 8.332 7.074 7.707 c 6.43 7.531 5.781 7.441
 5.148 7.449 c h
20.43 8.566 m 22.039 8.57 23.535 9.301 24.566 10.961 c 25.055 11.949 25.051
 12.816 24.777 13.641 c 24.5 14.469 23.922 15.25 23.258 15.914 c 21.934 
17.242 20.313 18.059 20.313 18.059 c 20.121 18.156 20 18.352 20 18.563 c
 20 23.441 l 18.078 24.586 15.402 25.219 12.688 25.219 c 9.973 25.219 7.301
 24.586 5.375 23.441 c 5.375 18.188 l 5.375 17.977 5.258 17.781 5.066 17.684
 c 5.066 17.684 3.641 16.965 2.508 15.742 c 1.938 15.133 1.457 14.406 1.242
 13.613 c 1.031 12.816 1.059 11.953 1.566 10.941 c 1.57 10.934 1.57 10.93
 1.574 10.922 c 2.082 9.82 2.828 9.172 3.719 8.836 c 4.609 8.5 5.672 8.488
 6.773 8.793 c 8.957 9.391 11.25 11.227 12.5 13.84 c 12.5 16.313 l 13.625
 16.313 l 13.625 13.805 l 14.516 11.207 16.609 9.391 18.793 8.793 c 19.34
 8.641 19.891 8.563 20.43 8.566 c h
20.43 8.566 m f
12.688 16.313 m 9.711 16.313 6.734 16.875 4.543 18.07 c 4.273 18.219 4.172
 18.559 4.32 18.832 c 4.469 19.105 4.813 19.203 5.082 19.055 c 7.02 18 9.855
 17.438 12.688 17.438 c 15.523 17.438 18.359 18 20.293 19.055 c 20.566 19.203
 20.91 19.105 21.059 18.832 c 21.207 18.559 21.105 18.219 20.832 18.07 c
 18.645 16.875 15.668 16.313 12.688 16.313 c h
12.688 16.313 m f
12.688 18.938 m 9.711 18.938 6.734 19.5 4.543 20.695 c 4.273 20.844 4.172
 21.184 4.32 21.457 c 4.469 21.73 4.813 21.828 5.082 21.68 c 7.02 20.625
 9.855 20.063 12.688 20.063 c 15.523 20.063 18.359 20.625 20.293 21.68 c
 20.566 21.828 20.91 21.73 21.059 21.457 c 21.207 21.184 21.105 20.844 20.832
 20.695 c 18.645 19.5 15.668 18.938 12.688 18.938 c h
12.688 18.938 m f
12.688 21.563 m 9.711 21.563 6.734 22.125 4.543 23.32 c 4.273 23.469 4.172
 23.809 4.32 24.082 c 4.469 24.355 4.813 24.453 5.082 24.305 c 7.02 23.25
 9.855 22.688 12.688 22.688 c 15.523 22.688 18.359 23.25 20.293 24.305 c
 20.566 24.453 20.91 24.355 21.059 24.082 c 21.207 23.809 21.105 23.469 
20.832 23.32 c 18.645 22.125 15.668 21.563 12.688 21.563 c h
12.688 21.563 m f
Q Q
showpage
%%Trailer
%%EOF
